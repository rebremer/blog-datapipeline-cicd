{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "blog-datapipeline-adfv2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/blog-datapipeline-pipeline-dbrmi')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy csv to parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "rawdata//"
							},
							{
								"name": "Destination",
								"value": "defineddata//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "csv_files_mi",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "parquet_files_mi",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Create graph and write CosmosDB",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy csv to parquet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().globalParameters.notebook_name",
								"type": "Expression"
							},
							"baseParameters": {
								"cosmosdb_name": {
									"value": "@pipeline().globalParameters.cosmosdb_name",
									"type": "Expression"
								},
								"stor_name": {
									"value": "@pipeline().globalParameters.stor_name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks_mi",
							"type": "LinkedServiceReference",
							"parameters": {
								"workspace_id_url": "@pipeline().globalParameters.workspace_id_url",
								"cluster_id": "@pipeline().globalParameters.cluster_id",
								"dbr_resource_id": "@pipeline().globalParameters.dbr_resource_id"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-20T10:52:16Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/csv_files_mi')]",
				"[concat(variables('factoryId'), '/datasets/parquet_files_mi')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks_mi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blog-datapipeline-pipeline-key')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy csv to parquet",
						"description": "Copy csv to parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "rawdata//"
							},
							{
								"name": "Destination",
								"value": "defineddata//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "csv_files_key",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "parquet_files_key",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Create graph and write CosmosDB",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy csv to parquet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().globalParameters.notebook_name",
								"type": "Expression"
							},
							"baseParameters": {
								"cosmosdb_name": {
									"value": "@pipeline().globalParameters.cosmosdb_name",
									"type": "Expression"
								},
								"stor_name": {
									"value": "@pipeline().globalParameters.stor_name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference",
							"parameters": {
								"workspace_id_url": "@pipeline().globalParameters.workspace_id_url",
								"cluster_id": "@pipeline().globalParameters.cluster_id",
								"vaultBaseUrl": "@pipeline().globalParameters.vaultBaseUrl"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-20T10:52:17Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/csv_files_key')]",
				"[concat(variables('factoryId'), '/datasets/parquet_files_key')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blog-datapipeline-pipeline-mi')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy csv to parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "rawdata//"
							},
							{
								"name": "Destination",
								"value": "defineddata//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "csv_files_mi",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "parquet_files_mi",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Create graph and write CosmosDB",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy csv to parquet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().globalParameters.notebook_name",
								"type": "Expression"
							},
							"baseParameters": {
								"cosmosdb_name": {
									"value": "@pipeline().globalParameters.cosmosdb_name",
									"type": "Expression"
								},
								"stor_name": {
									"value": "@pipeline().globalParameters.stor_name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference",
							"parameters": {
								"workspace_id_url": "@pipeline().globalParameters.workspace_id_url",
								"cluster_id": "@pipeline().globalParameters.cluster_id",
								"vaultBaseUrl": "@pipeline().globalParameters.vaultBaseUrl"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-20T10:52:16Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/csv_files_mi')]",
				"[concat(variables('factoryId'), '/datasets/parquet_files_mi')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_files_key')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2KEY",
					"type": "LinkedServiceReference",
					"parameters": {
						"stor_url": "@pipeline().globalParameters.stor_url",
						"akv_url": "@pipeline().globalParameters.akv_url"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "age",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2KEY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_files_mi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference",
					"parameters": {
						"stor_url": "@pipeline().globalParameters.stor_url"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "age",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parquet_files_key')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2KEY",
					"type": "LinkedServiceReference",
					"parameters": {
						"stor_url": "@pipeline().globalParameters.stor_url",
						"akv_url": "@pipeline().globalParameters.akv_url"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "defineddata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2KEY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parquet_files_mi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference",
					"parameters": {
						"stor_url": "@pipeline().globalParameters.stor_url"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "defineddata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "AzureBlobFS",
				"annotations": [],
				"typeProperties": {
					"url": "@{linkedService().stor_url}"
				},
				"parameters": {
					"stor_url": {
						"type": "String"
					}
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2KEY')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "AzureBlobFS",
				"annotations": [],
				"typeProperties": {
					"url": "@{linkedService().stor_url}",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference",
							"parameters": {
								"akv_url": {
									"value": "@linkedService().akv_url",
									"type": "Expression"
								}
							}
						},
						"secretName": "stor-key"
					}
				},
				"parameters": {
					"stor_url": {
						"type": "String"
					},
					"akv_url": {
						"type": "String"
					}
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"workspace_id_url": {
						"type": "String"
					},
					"cluster_id": {
						"type": "String"
					},
					"vaultBaseUrl": {
						"type": "string",
						"defaultValue": "https://blogdatapipelineprodakv2.vault.azure.net/"
					}
				},
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "@{linkedService().workspace_id_url}",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference",
							"parameters": {
								"akv_url": {
									"value": "@linkedService().vaultBaseUrl",
									"type": "Expression"
								}
							}
						},
						"secretName": "pattoken"
					},
					"existingClusterId": "@{linkedService().cluster_id}"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks_mi')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"workspace_id_url": {
						"type": "String"
					},
					"cluster_id": {
						"type": "String"
					},
					"dbr_resource_id": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "@{linkedService().workspace_id_url}",
					"authentication": "MSI",
					"workspaceResourceId": "@{linkedService().dbr_resource_id}",
					"existingClusterId": "@{linkedService().cluster_id}"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "AzureKeyVault",
				"annotations": [],
				"typeProperties": {
					"baseUrl": "@{linkedService().akv_url}"
				},
				"parameters": {
					"akv_url": {
						"type": "String"
					}
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		}
	]
}